version: 2.1
jobs:
  android:
   docker:
      - image: dopaemon/docker-image:android
   steps:
      - run:
          name: Include DPKG i386
          no_output_timeout: 20m
          command: |
            sudo dpkg --add-architecture i386
      - run:
          name: sudo apt update
          no_output_timeout: 20m
          command: |
            sudo apt update
      - run:
          name: sudo apt full-upgrade -y
          no_output_timeout: 20m
          command: |
            sudo apt full-upgrade -y
      - run:
          name: Install add-apt-repository
          no_output_timeout: 20m
          command: |
            sudo apt install software-properties-common -y
      - run:
          name: Add PPA OpenJDK
          no_output_timeout: 20m
          command: |
            sudo add-apt-repository ppa:openjdk-r/ppa
      - run:
          name: Add PPA Python 3.6
          no_output_timeout: 20m
          command: |
            sudo add-apt-repository ppa:deadsnakes/ppa
      - run:
          name: sudo apt update
          no_output_timeout: 20m
          command: |
            sudo apt update
      - run:
          name: Unistall OpenJDK
          no_output_timeout: 20m
          command: |
            sudo apt-get purge openjdk-8-jdk openjdk-8-jre openjdk-11-jdk openjdk-11-jre -y
      - run:
          name: Install OpenJDK 8 (Android Nougat)
          no_output_timeout: 20m
          command: |
            sudo apt install openjdk-8-jdk openjdk-8-jre -y
      - run:
          name: Install Packages
          no_output_timeout: 20m
          command: |
            sudo apt install python3 python3.6 bison repo libssl-dev build-essential curl flex git gnupg gperf liblz4-tool libncurses5-dev libsdl1.2-dev libxml2 libxml2-utils lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev build-essential kernel-package libncurses5-dev bzip2 git python sudo gcc g++ openssh-server tar gzip ca-certificates -y
            sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev -y
            sudo apt install bison build-essential curl gnupg gperf libesd0-dev libsdl1.2-dev libxml2 libxml2-utils lzop pngcrush schedtool squashfs-tools zip zlib1g-dev g++-multilib lib32ncurses5-dev -y
            sudo apt install android androidsdk-uiautomatorviewer android-copyright android-src-vendor android-emulator android-tools-adb android-headers android-tools-adbd androidsdk-ddms android-tools-fastboot androidsdk-hierarchyviewer android-tools-fsutils androidsdk-traceview -y
            sudo apt install -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc repo nano
            sudo apt install -y git gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 x11proto-core-dev libx11-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc repo nano libssl-dev
            sudo apt install -y android-tools-adb bc bison build-essential curl flex g++-multilib gcc-multilib gnupg gperf imagemagick lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc yasm zip zlib1g-dev
            sudo apt install -y build-essential kernel-package libncurses5-dev bzip2 android-liblog android-libbacktrace android-libutils android-sdk-build-tools libncurses5:i386 libncurses5 ccache
            sudo apt install -y rsync sshpass
      - run:
          name: Python Version
          no_output_timeout: 20m
          command: |
            python --version
            python3 --version
            python3.6 --version
      - run:
          name: Github Config
          no_output_timeout: 20m
          command: |
            git config --global user.name "dopaemon"
            git config --global user.email "polarisdp@gmail.com"
            git config --global color.ui true
      - run:
          name: infomation
          no_output_timeout: 20m
          command: |
            df -hal
            lscpu
      - run:
          name: Curl Repo Bin From Google
          no_output_timeout: 20m
          command: |
            mkdir -p ~/bin
            cd ~/
            curl https://storage.googleapis.com/git-repo-downloads/repo > repo
            chmod a+x repo
      - run:
          name: Syncing source
          no_output_timeout: 20m
          command: |
            cd ~/
            mkdir ~/lineage && cd ~/lineage
            python3.6 ~/repo init -u https://github.com/LineageOS/android -b cm-14.1
      - run:
          name: Start Sync
          no_output_timeout: 20m
          command: |
            cd ~/lineage
            python3.6 ~/repo sync -vf -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
      - run:
          name: Git Tree Bacon
          no_output_timeout: 20m
          command: |
            cd ~/lineage
            git clone -b cm-14.1 https://github.com/diepquynh/android_device_samsung_grandprimeve3g device/samsung/grandprimeve3g
            git clone -b cm-14.1 https://github.com/diepquynh/android_vendor_samsung_grandprimeve3g vendor/samsung/grandprimeve3g
            git clone -b cm-14.1 https://github.com/diepquynh/android_kernel_samsung_sprd-RZ kernel/samsung/sprd
            git clone -b cm-14.1 https://github.com/diepquynh/android_device_samsung_scx35-common device/samsung/scx35-common
            git clone -b cm-14.1 https://github.com/diepquynh/android_device_samsung_scx30g2-common device/samsung/scx30g2-common
            git clone -b cm-14.1 https://github.com/diepquynh/android_vendor_samsung_scx30g2-common vendor/samsung/scx30g2-common
            git clone -b cm-14.1 https://github.com/diepquynh/android_device_samsung_sprd-common device/samsung/sprd-common
            git clone -b cm-14.1 https://github.com/LineageOS/android_external_stlport external/stlport
            git clone -b cm.14.1 https://github.com/LineageOS/LineageOS/android_hardware_samsung hardware/samsung
            git clone -b cm.14.1 https://github.com/LineageOS/android_packages_apps_SamsungServiceMode packages/apps/SamsungServiceMode
            git clone -b cm.14.1 https://github.com/diepquynh/android_hardware_sprd hardware/sprd
      - run:
          name: Export Command
          no_output_timeout: 20m
          command: |
            echo "export ALLOW_MISSING_DEPENDENCIES=true" >> ~/.bashrc
            echo "export LC_ALL=C" >> ~/.bashrc
            echo "export ZIPNAME="HALIUM-7.1-$(date +%d_%m_%Y_%H_%M)-bacon.zip"" >> ~/.bashrc
      - run:
          name: source ~/.bashrc
          no_output_timeout: 20m
          command: |
            source ~/.bashrc
      - run:
          name: source build/envsetup.sh
          no_output_timeout: 20m
          command: |
            cd ~/lineage
            source build/envsetup.sh
      - run:
          name: lunch lineage_grandprimeve3g-userdebug
          no_output_timeout: 20m
          command: |
            cd ~/lineage
            source build/envsetup.sh
            lunch lineage_grandprimeve3g-userdebug
      - run:
          name: mka bacon -j$(nproc --all)
          no_output_timeout: 20m
          command: |
            cd ~/lineage
            source build/envsetup.sh
            lunch lineage_grandprimeve3g-userdebug
            mka bacon -j$(nproc --all)
      - run:
          name: Create Ssh
          no_output_timeout: 20m
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan -t rsa frs.sourceforge.net >> ~/.ssh/known_hosts
            ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -P ""
      - run:
          name: SourceForge Upload
          no_output_timeout: 20m
          command: |
            cd ~/lineage/out/target/product/bacon
            export ZIPNAME="HALIUM-7.1-$(date +%d_%m_%Y_%H_%M)-bacon.zip"
            sudo zip -rv9 $ZIPNAME . -i halium-boot.img system.img
            sshpass -p "$PASSWORD" rsync -avP -e ssh $ZIPNAME dopaemon@frs.sourceforge.net:/home/frs/project/halium-bacon/
workflows:
  version: 2.1
  cooking:
    jobs:
      - android
